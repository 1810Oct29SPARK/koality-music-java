-- ==================== DROP ALL EXISTING SEQUENCES ====================
DROP SEQUENCE PUBLISHER_CREDENTIALS_ID_SEQ;
DROP SEQUENCE CUSTOMER_CREDENTIALS_ID_SEQ;
DROP SEQUENCE PUBLISHER_ID_SEQ;
DROP SEQUENCE CUSTOMER_ID_SEQ;
DROP SEQUENCE TRACK_ID_SEQ;
DROP SEQUENCE ALBUM_ID_SEQ;
DROP SEQUENCE PLAYLIST_ID_SEQ;
DROP SEQUENCE TRACK_REVIEW_ID_SEQ;
DROP SEQUENCE ALBUM_REVIEW_ID_SEQ;
DROP SEQUENCE IMAGE_ID_SEQ;
DROP SEQUENCE AUDIO_ID_SEQ;

-- ==================== DROP ALL EXISTING TABLES ====================
DROP TABLE PUBLISHER_CUSTOMER;
DROP TABLE CUSTOMER_TRACK;
DROP TABLE CUSTOMER_ALBUM;
DROP TABLE TRACK_ALBUM;
DROP TABLE TRACK_PLAYLIST;

DROP TABLE PLAYLIST;
DROP TABLE TRACK_REVIEW;
DROP TABLE ALBUM_REVIEW;

DROP TABLE TRACK;
DROP TABLE ALBUM;
DROP TABLE CUSTOMER;
DROP TABLE PUBLISHER;

DROP TABLE PUBLISHER_CREDENTIALS;
DROP TABLE CUSTOMER_CREDENTIALS;
DROP TABLE AUDIO_STOCK;
DROP TABLE IMAGE_STOCK;

-- ==================== CREATE NEW TABLES ====================
CREATE TABLE IMAGE_STOCK (
	IMAGE_ID INT PRIMARY KEY,
	IMAGE_TYPE VARCHAR2(4),
	IMAGE_DATA BLOB
);

CREATE TABLE AUDIO_STOCK (
	AUDIO_ID INT PRIMARY KEY,
	AUDIO_TYPE VARCHAR2(4),
	AUDIO_DATA BLOB
);

CREATE TABLE PUBLISHER_CREDENTIALS (
	PUBLISHER_CREDENTIALS_ID INT PRIMARY KEY,
	USERNAME VARCHAR2(30) NOT NULL UNIQUE,
	HASH_SALT VARCHAR2(4) NOT NULL,
	PASSWORD_HASH VARCHAR2(128) NOT NULL
);

CREATE TABLE CUSTOMER_CREDENTIALS (
	CUSTOMER_CREDENTIALS_ID INT PRIMARY KEY,
	USERNAME VARCHAR2(30) NOT NULL UNIQUE,
	HASH_SALT VARCHAR2(4) NOT NULL,
	PASSWORD_HASH VARCHAR2(128) NOT NULL
);

CREATE TABLE PUBLISHER (
	PUBLISHER_ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR2(30) NOT NULL,
	LAST_NAME VARCHAR2(30) NOT NULL,
	EMAIL VARCHAR2(100) NOT NULL UNIQUE,
	COMPANY_NAME VARCHAR2(30),
	IMAGE_ID INT,
	PUBLISHER_CREDENTIALS_ID INT
);

CREATE TABLE CUSTOMER (
	CUSTOMER_ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR2(30) NOT NULL,
	LAST_NAME VARCHAR2(30) NOT NULL,
	EMAIL VARCHAR2(100) NOT NULL UNIQUE,
	FAVORITE_GENRE VARCHAR2(30),
	IMAGE_ID INT,
	CUSTOMER_CREDENTIALS_ID INT
);

CREATE TABLE TRACK (
	TRACK_ID INT PRIMARY KEY,
	TRACK_NAME VARCHAR2(100) NOT NULL,
	GENRE VARCHAR2(30) NOT NULL,
	COMPOSER VARCHAR2(100),
	ARTIST VARCHAR2(100),
	TRACK_LENGTH INT,
	UNIT_PRICE DOUBLE PRECISION NOT NULL,
	AUDIO_ID INT,
	PUBLISHER_ID INT NOT NULL
);

CREATE TABLE ALBUM (
	ALBUM_ID INT PRIMARY KEY,
	ALBUM_NAME VARCHAR2(100) NOT NULL,
	GENRE VARCHAR2(30),
	UNIT_PRICE DOUBLE PRECISION NOT NULL,
	IMAGE_ID INT,
	PUBLISHER_ID INT NOT NULL
);

CREATE TABLE PLAYLIST (
	PLAYLIST_ID INT PRIMARY KEY,
	PLAYLIST_NAME VARCHAR2(100) NOT NULL,
	CUSTOMER_ID INT NOT NULL
);

CREATE TABLE TRACK_REVIEW (
	TRACK_REVIEW_ID INT PRIMARY KEY,
	TRACK_ID INT,
	CUSTOMER_ID INT,
	RATING INT,
	REVIEW_COMMENT VARCHAR2(500)
);

CREATE TABLE ALBUM_REVIEW (
	ALBUM_REVIEW_ID INT PRIMARY KEY,
	ALBUM_ID INT,
	CUSTOMER_ID INT,
	RATING INT,
	REVIEW_COMMENT VARCHAR2(500)
);

CREATE TABLE PUBLISHER_CUSTOMER (
	PUBLISHER_ID INT,
	CUSTOMER_ID INT,
	PRIMARY KEY (PUBLISHER_ID, CUSTOMER_ID)
);

CREATE TABLE CUSTOMER_TRACK (
	CUSTOMER_ID INT,
	TRACK_ID INT,
	PRIMARY KEY (CUSTOMER_ID, TRACK_ID)
);

CREATE TABLE CUSTOMER_ALBUM (
	CUSTOMER_ID INT,
	ALBUM_ID INT,
	PRIMARY KEY (CUSTOMER_ID, ALBUM_ID)
);

CREATE TABLE TRACK_ALBUM (
	TRACK_ID INT,
	ALBUM_ID INT,
	PRIMARY KEY (TRACK_ID, ALBUM_ID)
);

CREATE TABLE TRACK_PLAYLIST (
	TRACK_ID INT,
	PLAYLIST_ID INT,
	PRIMARY KEY (TRACK_ID, PLAYLIST_ID)
);

-- ==================== ADD FOREIGN KEY CONSTRAINTS ====================
ALTER TABLE PUBLISHER
ADD CONSTRAINT FK_PUBLISHER_CREDENTIALS_PCID
FOREIGN KEY (PUBLISHER_CREDENTIALS_ID) REFERENCES PUBLISHER_CREDENTIALS(PUBLISHER_CREDENTIALS_ID)
ON DELETE SET NULL;

ALTER TABLE PUBLISHER
ADD CONSTRAINT FK_PUBLISHER_IMAGE_IID
FOREIGN KEY (IMAGE_ID) REFERENCES IMAGE_STOCK(IMAGE_ID)
ON DELETE SET NULL;

ALTER TABLE CUSTOMER
ADD CONSTRAINT FK_CUSTOMER_CREDENTIALS_CCID
FOREIGN KEY (CUSTOMER_CREDENTIALS_ID) REFERENCES CUSTOMER_CREDENTIALS(CUSTOMER_CREDENTIALS_ID)
ON DELETE SET NULL;

ALTER TABLE CUSTOMER
ADD CONSTRAINT FK_CUSTOMER_IMAGE_IID
FOREIGN KEY (IMAGE_ID) REFERENCES IMAGE_STOCK(IMAGE_ID)
ON DELETE SET NULL;

ALTER TABLE TRACK
ADD CONSTRAINT FK_TRACK_PUBLISHER_PID
FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER(PUBLISHER_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK
ADD CONSTRAINT FK_TRACK_AUDIO_AUID
FOREIGN KEY (AUDIO_ID) REFERENCES AUDIO_STOCK(AUDIO_ID)
ON DELETE CASCADE;

ALTER TABLE ALBUM
ADD CONSTRAINT FK_ALBUM_PUBLISHER_PID
FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER(PUBLISHER_ID)
ON DELETE CASCADE;

ALTER TABLE ALBUM
ADD CONSTRAINT FK_ALBUM_IMAGE_IID
FOREIGN KEY (IMAGE_ID) REFERENCES IMAGE_STOCK(IMAGE_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK_REVIEW
ADD CONSTRAINT FK_TR_TRACK_TID
FOREIGN KEY (TRACK_ID) REFERENCES TRACK(TRACK_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK_REVIEW
ADD CONSTRAINT FK_TR_CUSTOMER_CID
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
ON DELETE CASCADE;

ALTER TABLE ALBUM_REVIEW
ADD CONSTRAINT FK_AR_ALBUM_AID
FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ALBUM_ID)
ON DELETE CASCADE;

ALTER TABLE ALBUM_REVIEW
ADD CONSTRAINT FK_AR_CUSTOMER_CID
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
ON DELETE CASCADE;

ALTER TABLE PLAYLIST
ADD CONSTRAINT FK_PL_CUSTOMER_CID
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
ON DELETE CASCADE;

ALTER TABLE PUBLISHER_CUSTOMER
ADD CONSTRAINT FK_PC_PUBLISHER_PID
FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER(PUBLISHER_ID)
ON DELETE CASCADE;

ALTER TABLE PUBLISHER_CUSTOMER
ADD CONSTRAINT FK_PC_CUSTOMER_CID
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
ON DELETE CASCADE;

ALTER TABLE CUSTOMER_TRACK
ADD CONSTRAINT FK_CT_CUSTOMER_CID
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
ON DELETE CASCADE;

ALTER TABLE CUSTOMER_TRACK
ADD CONSTRAINT FK_CT_TRACK_TID
FOREIGN KEY (TRACK_ID) REFERENCES TRACK(TRACK_ID)
ON DELETE CASCADE;

ALTER TABLE CUSTOMER_ALBUM
ADD CONSTRAINT FK_CA_CUSTOMER_CID
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
ON DELETE CASCADE;

ALTER TABLE CUSTOMER_ALBUM
ADD CONSTRAINT FK_CA_ALBUM_AID
FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ALBUM_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK_ALBUM
ADD CONSTRAINT FK_TA_TRACK_TID
FOREIGN KEY (TRACK_ID) REFERENCES TRACK(TRACK_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK_ALBUM
ADD CONSTRAINT FK_TA_ALBUM_AID
FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ALBUM_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK_PLAYLIST
ADD CONSTRAINT FK_TP_TRACK_TID
FOREIGN KEY (TRACK_ID) REFERENCES TRACK(TRACK_ID)
ON DELETE CASCADE;

ALTER TABLE TRACK_PLAYLIST
ADD CONSTRAINT FK_TP_PLAYLIST_PLID
FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLIST(PLAYLIST_ID)
ON DELETE CASCADE;

-- ==================== ADD OTHER CONSTRAINTS ====================

ALTER TABLE TRACK_REVIEW
ADD CONSTRAINT UC_TID_CID
UNIQUE (TRACK_ID, CUSTOMER_ID);

ALTER TABLE ALBUM_REVIEW
ADD CONSTRAINT UC_AID_CID
UNIQUE (ALBUM_ID, CUSTOMER_ID);

-- ==================== CREATE ID SEQUENCES ====================
CREATE SEQUENCE PUBLISHER_CREDENTIALS_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE CUSTOMER_CREDENTIALS_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE PUBLISHER_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE CUSTOMER_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE TRACK_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE ALBUM_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE PLAYLIST_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE TRACK_REVIEW_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE ALBUM_REVIEW_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE IMAGE_ID_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE AUDIO_ID_SEQ
START WITH 1
INCREMENT BY 1;